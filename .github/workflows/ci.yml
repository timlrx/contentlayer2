name: ci

on:
  push:
    branches: ['**']
  pull_request:
    branches: ['**']

jobs:
  lint:
    strategy:
      matrix:
        node-version: [18]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - run: yarn lint:check

  test:
    strategy:
      matrix:
        node-version: [18, 19, 20, 21, 22]
        # Disable windows until path resolution for image in windows is fixed
        # os: [ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn test

  build-example-next-contentlayer-example:
    strategy:
      matrix:
        node-version: [18, 20, 22]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn build
        working-directory: examples/next-contentlayer-example

  build-example-next-rsc-dynamic-example:
    strategy:
      matrix:
        node-version: [18, 20, 22]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn build
        working-directory: examples/next-rsc-dynamic

  build-example-next-images-example:
    strategy:
      matrix:
        node-version: [18, 20, 22]
        # TODO re-enable windows
        # os: [ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn build
        working-directory: examples/next-images

  build-example-node-script:
    strategy:
      matrix:
        node-version: [18, 19, 20, 21, 22]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn start
        working-directory: examples/node-script

  build-example-node-script-mdx:
    strategy:
      matrix:
        node-version: [18, 19, 20, 21, 22]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn start
        working-directory: examples/node-script-mdx

  build-example-node-script-remote-content:
    strategy:
      matrix:
        node-version: [18, 19, 20, 21, 22]
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - run: yarn build
      - run: yarn start
        working-directory: examples/node-script-remote-content
